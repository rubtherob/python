'''
Реализовать класс Matrix (матрица).
Конструктор класса __init__() должен принимать список списков чисел для задания превоначального состояния матрицы.
Подсказка: матрица — это таблица размером N строк на M столбцов (размерность N x M).
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

| 31 22 |
| 37 43 |
| 51 86 |

| 3 5 32 |
| 2 4 6 |
| -1 64 -8 |

| 3 5 8 3 |
| 8 3 7 1 |
В методе __init__() надо проверить корректность передаваемых данных - все списки должны быть одинаковой длины.
В случае расхождения выбрасывать исключение ValueError с соответствующим описанием.
Добавить метод __add__() сложения двух матриц. Складывать можно матрицы одинаковой размерности.
В случае, когда пользователь пытается сложить матрицы разных размеров выбросить исключение ValueError.
В результате сложения двух матриц должна образоваться новая матрица размером N x M, где каждый элемент в ячейке i
,j образован сложением значений из соответствующих ячеек исходных матриц.
Реализовть метод __str__(), возвращающий строку вида " 1 2 3\n 4 5 6", отводя под числа по три разряда,
 чтобы для небольших чисел матрица выглядела как таблица.
Создать три матрицы (две одинаковые по размеру и одну с другим размером).
Сложить одинаковые матрицы и потом сложить разные. Напечатать исходные таблицы и результат сложения.
'''
class Matrix:


    def __init__(self, matrix):
        len_list = len(matrix[0])
        for list in matrix:
            if len_list != len(list):
                raise ValueError('Списки не одинаковой длинны')

        self.matrix = matrix

    def __add__(self, other):
        if (len(self) == len(other)) and (len(self[0]) == len(other[0])):
            matrix=Matrix(other)
            for i in range (len(self)):
                for j in range (len(self[i])):
                    matrix[i][j]=self[i][j]+other[i][j]

            return (matrix)
        else:
            raise ValueError('Матрицы разные по размеру')



    def __str__(self):
        strs=''
        for i in range(len(self)):
            for j in range(len(self[i])):
                strs+=str(self.matrix[i][j])
            strs+='\n'
        return strs


    def __len__(self):
        return len(self.matrix)


    def __getitem__(self, indx):
        return self.matrix[indx]




a=Matrix([[1,2,3],[3,2,1]])
b=Matrix([[3,2,1],[1,2,3]])
c=Matrix([[1,2],[2,1]])




l = a + b
print(a)
print(l)



